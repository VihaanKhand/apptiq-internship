version: "3.8"

services:
  
  api:
    image: api:prod
    container_name: api
    build:
      context: .
      dockerfile: backend/api/Dockerfile
    working_dir: /app 
    entrypoint: uvicorn api.main:app --host 0.0.0.0 --port 8080 --reload
    env_file:
      - ./envs/backend.env
      - .env
    ports:
      - 8080:8080
    volumes:
      - ./backend/api:/app/api
      - ./backend/shared_mcp:/app/shared_mcp
    depends_on:
      - aws-mcp
      - k8s-mcp
    networks:
      - mcp-net
    

  youtube:
    image: youtube-mcp-server
    env_file:
      - ./envs/youtube.env
    environment:
      - YOUTUBE_MCP_SERVER_PORT=${MCP_SERVER_PORT}
    ports:
      - 5050:${MCP_SERVER_PORT}

  inspector:
    image: inspector:prod
    build:
      dockerfile: ./inspector/Dockerfile
    ports:
      - 6274:6274
      - 6277:6277

  nginx:
    image: nginx:1.26.3-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
    networks:
      - mcp-net
    depends_on:
      - api
  
  aws-mcp:
    image: aws-mcp-server
    build:
      context: ./mcp-aws/AWS_CloudGuardMCP
      dockerfile: Dockerfile
    env_file:
      - envs/aws.env
    environment:
      - AWS_MCP_PORT=5010
    ports:
      - 5010:5010
    volumes:
      - ./mcp-aws/AWS_CloudGuardMCP:/app
    entrypoint: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5010"] 
    networks:
      - mcp-net

  
  k8s-mcp:
    image: k8s-mcp-server
    build:
      context: ./mcp_k8s/k8s_mcp_server
      dockerfile: deploy/docker/Dockerfile
    environment:
      - K8S_MCP_SECURITY_MODE=permissive
      - K8S_MCP_TRANSPORT=sse
    volumes:
      - ~/.kube:/home/appuser/.kube:ro
    ports:
      - 8081:8000
    networks:
      - mcp-net
  
  frontend:
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:80
    depends_on:
      - api
    networks:
      - mcp-net
       
networks:
  mcp-net:
    driver: bridge
